# =============================================================================
# CONFIGURATION POUR STACK 100% LOCAL (Docker)
# =============================================================================
# Copier ce fichier vers .env et remplir avec vos vraies clés API
# =============================================================================

# OpenAI API (REQUIS - LLM et embeddings)
OPENAI_API_KEY=sk-proj-YOUR_OPENAI_KEY_HERE

# -----------------------------------------------------------------------------
# Weaviate Vector Store
# -----------------------------------------------------------------------------

# LOCAL (Docker localhost:8088) - RECOMMANDÉ
WEAVIATE_URL=http://localhost:8088
# Note: Pas d'API key nécessaire pour Weaviate local
WEAVIATE_INDEX_NAME=langchain

# CLOUD (Weaviate Cloud) - Alternative
# WEAVIATE_URL=https://your-cluster.weaviate.network
# WEAVIATE_API_KEY=your-weaviate-api-key
# WEAVIATE_INDEX_NAME=langchain

# -----------------------------------------------------------------------------
# PostgreSQL (Record Manager + LangGraph Checkpoints)
# -----------------------------------------------------------------------------

# LOCAL (Docker localhost:5432) - RECOMMANDÉ
RECORD_MANAGER_DB_URL=postgresql://postgres:password@localhost:5432/chat_langchain

# CLOUD (Supabase) - Alternative
# RECORD_MANAGER_DB_URL=postgresql://postgres:your-password@your-project.supabase.co:5432/postgres

# -----------------------------------------------------------------------------
# LangSmith (OPTIONNEL - Tracing et Observabilité)
# -----------------------------------------------------------------------------

# LangSmith est optionnel (free tier: 5000 traces/mois)
# Pour activer: mettre LANGCHAIN_TRACING_V2=true et fournir API key
LANGCHAIN_TRACING_V2=false
# LANGCHAIN_ENDPOINT=https://api.smith.langchain.com
# LANGCHAIN_API_KEY=lsv2_pt_YOUR_LANGSMITH_KEY_HERE
# LANGCHAIN_PROJECT=chat-langchain-local

# -----------------------------------------------------------------------------
# Autres LLM API Keys (OPTIONNEL)
# -----------------------------------------------------------------------------

# Anthropic Claude (optionnel - si vous voulez utiliser Claude)
# ANTHROPIC_API_KEY=sk-ant-YOUR_ANTHROPIC_KEY_HERE

# DeepSeek (optionnel - modèle économique)
# DEEPSEEK_API_KEY=sk-YOUR_DEEPSEEK_KEY_HERE

# Groq (optionnel - Llama 3.3 70B ultra-rapide)
# GROQ_API_KEY=gsk_YOUR_GROQ_KEY_HERE
